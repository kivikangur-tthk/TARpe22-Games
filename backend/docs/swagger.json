{
  "openapi": "3.0.2",
  "info": {
    "title": "Games API TARpe22",
    "version": "1.0.0",
    "description": "# Games API Tarpe22 Hajusrakenduste n√§idisrakendus \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response include a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request."
  },
  "paths": {
    "/games": {
      "summary": "Games object",
      "get": {
        "tags": [
          "GAMES"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameListItem"
                  }
                },
                "examples": {
                  "List of Games": {
                    "value": [
                      {
                        "id": 47,
                        "name": "some text"
                      },
                      {
                        "id": 40,
                        "name": "some text"
                      }
                    ]
                  }
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get all game names"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGame"
              },
              "examples": {
                "NewGame": {
                  "value": {
                    "name": "some text",
                    "price": 81.47
                  }
                },
                "GameWithoutPrice": {
                  "value": {
                    "name": "some text"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "GAMES"
        ],
        "responses": {
          "201": {
            "headers": {
              "location": {
                "schema": {
                  "type": "string"
                },
                "description": "Location of created object"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Add new game"
      }
    },
    "/games/{id}": {
      "summary": "Deal with Game object",
      "get": {
        "tags": [
          "GAMES"
        ],
        "parameters": [
          {
            "examples": {
              "First": {
                "value": "1"
              }
            },
            "name": "id",
            "description": "Id of the game being requested",
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {
                  "One Game": {
                    "value": {
                      "id": 36,
                      "name": "some text",
                      "price": 81
                    }
                  },
                  "Game without price": {
                    "value": {
                      "id": 61,
                      "name": "some text"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "InvalidID": {
                    "value": {
                      "error": "ID must be a whole number: ab12"
                    }
                  }
                }
              }
            },
            "description": "Invalid request path parameter\n"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFound": {
                    "value": {
                      "error": "Game Not Found!"
                    }
                  }
                }
              }
            },
            "description": "Game with given id does not exist"
          }
        },
        "summary": "Get the game with given id"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGame"
              }
            }
          },
          "required": true
        },
        "tags": [
          "GAMES"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Id of the game to be modified",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Modify existing game"
      },
      "delete": {
        "tags": [
          "GAMES"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Id of game to be deleted",
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Game deleted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IdError": {
                    "value": {
                      "error": "ID must be a whole number: esimene"
                    }
                  }
                }
              }
            },
            "description": "Incorrect Id"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "NotFound": {
                    "value": {
                      "error": "Game Not Found!"
                    }
                  }
                }
              }
            },
            "description": "Game not found"
          }
        },
        "summary": "Remove a game"
      }
    }
  },
  "components": {
    "schemas": {
      "Game": {
        "title": "Root Type for Game",
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "format": "double",
            "type": "number"
          }
        },
        "example": {
          "id": 1,
          "name": "Witcher 3",
          "price": 29.99
        }
      },
      "GameListItem": {
        "title": "Root Type for GameListItem",
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": 1,
          "name": "Minecraft"
        }
      },
      "Error": {
        "title": "Root Type for Error",
        "description": "",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Error message"
        }
      },
      "NewGame": {
        "description": "Game to be saved",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Must contain atleast one non-whitespace character",
            "type": "string"
          },
          "price": {
            "format": "float",
            "description": "",
            "type": "number"
          }
        }
      }
    }
  }
}